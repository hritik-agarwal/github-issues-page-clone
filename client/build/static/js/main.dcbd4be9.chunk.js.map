{"version":3,"sources":["components/Issue.js","components/IssuesList.js","components/RenderIssues.js","App.js","index.js"],"names":["Issue","props","text","isOpen","issueNumber","dateOpened","issueCreator","tags","className","size","IssuesList","issueslist","useState","issues","setIssues","useEffect","map","issue","_id","RenderIssues","issueList","setIssueList","filter","setFilter","currentPage","setCurrentPage","newIssueText","setNewIssueText","newIssueCreator","setNewIssueCreator","handlePageChange","e","Number","target","innerHTML","axios","get","then","res","data","catch","err","console","log","maxPages","length","pageNumbers","i","push","indexOfLastIssue","indexOfFirstIssue","to","exact","path","onSubmit","preventDefault","newIssue","post","window","location","href","type","value","onChange","slice","number","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcbd4be9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GitPullRequestIcon, IssueOpenedIcon, CommentIcon } from '@primer/octicons-react'\r\nimport \"./Issue.css\";\r\n\r\nfunction Issue(props) {\r\n  const {text, isOpen, issueNumber, dateOpened, issueCreator, tags} = props;\r\n  return (\r\n    <div className=\"issue\">\r\n      <div className=\"top\">\r\n        <div className=\"topLeft\">\r\n          {isOpen ? <IssueOpenedIcon size={24} /> : <GitPullRequestIcon size={24} />}\r\n          <span className=\"text\">{text}</span>\r\n          {/* {JSON.parse(tag).map(tag => {\r\n            return (\r\n              <span key={tag.tagName} className=\"tags\" style={{ \"backgroundColor\": tag.color }}>{tag.tagName}</span>\r\n            );\r\n          })} */}\r\n        </div>\r\n        <CommentIcon size={24} className=\"topRight\"/>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        #{issueNumber} opened on {dateOpened} by <span className=\"issueCreator\">{issueCreator}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Issue\r\n","import React, { useState, useEffect } from 'react';\r\nimport Issue from \"./Issue\"\r\n\r\nfunction IssuesList({issueslist}) {\r\n\r\n  const [issues, setIssues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIssues(issueslist);\r\n  }, [issueslist]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"issuesList\">\r\n        {issues.map(issue => {\r\n          return (\r\n            <Issue\r\n              key={issue._id}\r\n              text={issue.text}\r\n              isOpen={issue.isOpen}\r\n              issueNumber={issue.issueNumber}\r\n              dateOpened={issue.dateOpened}\r\n              issueCreator={issue.issueCreator}\r\n              tags={issue.tags}\r\n            />\r\n          );\r\n        })};\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IssuesList\r\n","// Necessary imports\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\";\r\n\r\n// Component and CSS imports\r\nimport \"./renderIssues.css\";\r\nimport IssuesList from './IssuesList';\r\n\r\n\r\nfunction RenderIssues() {\r\n\r\n  // State Varaibales\r\n  const [issueList, setIssueList] = useState([{}]);\r\n  const [filter, setFilter] = useState(\"showAll\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [newIssueText, setNewIssueText] = useState('');\r\n  const [newIssueCreator, setNewIssueCreator] = useState('');\r\n\r\n  // To handle filter, page button & new issue form\r\n  const handleChange = (e) => setFilter(e.target.value);\r\n  const handlePageChange = e => setCurrentPage(Number(e.target.innerHTML));\r\n  const handleNewIssueText = e => { setNewIssueText(e.target.value) };\r\n  const handleNewIssueCreator = e => { setNewIssueCreator(e.target.value) };\r\n  const handleNewIssue = e => {\r\n    e.preventDefault();\r\n    const newIssue = {\r\n      issueNumber: issueList[issueList.length - 1].issueNumber + 1,\r\n      text: newIssueText,\r\n      issueCreator: newIssueCreator,\r\n      isOpen: true,\r\n      tags: []\r\n    }\r\n    axios.post('/add-issue', newIssue);\r\n    setNewIssueText('');\r\n    setNewIssueCreator('');\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  // to be run at start to fetch all issues\r\n  useEffect(() => {\r\n    axios.get('/list-issues').then(res => { setIssueList(res.data)}).catch(err => console.log(err));\r\n  },[])\r\n\r\n  // setting pagination\r\n  const totalIssues = issueList.length;\r\n  const issuesPerPage = 8;\r\n  const maxPages = (totalIssues + issuesPerPage - 1) / issuesPerPage;\r\n  const pageNumbers = []; for(let i=1; i<=maxPages; i++) pageNumbers.push(i);\r\n\r\n  // First and Last Issue on each page\r\n  const indexOfLastIssue = currentPage * issuesPerPage;\r\n  const indexOfFirstIssue = indexOfLastIssue - issuesPerPage;\r\n\r\n  return (\r\n\r\n    <div className=\"renderIssues\">\r\n      \r\n      <Router>\r\n\r\n        <div className=\"header\">\r\n          <div className=\"issuesHeader\">\r\n            <Link to=\"/\" className=\"btn newIssue\">Issues List</Link>\r\n            <Link to=\"/newIssue\" className=\"btn newIssue\">New Issue</Link>\r\n          </div>\r\n        </div>\r\n\r\n        <Switch>\r\n\r\n          <Route exact path=\"/newIssue\">\r\n            <div>\r\n              <form className=\"newIssueForm\" onSubmit={handleNewIssue}>\r\n                <legend>Issue Name</legend>\r\n                <input type=\"text\" value={newIssueText} onChange={handleNewIssueText}></input>\r\n                <legend>Type Your Name</legend>\r\n                <input type=\"text\" value={newIssueCreator} onChange={handleNewIssueCreator}></input>\r\n                <legend>Choose Tag</legend>\r\n                <button className=\"formBtn\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n\r\n            <div className=\"issuesHeader\">\r\n              <div className=\"filter\">\r\n                <select value={filter} onChange={handleChange} className=\"btn\">\r\n                  <option value=\"showAll\">Show All</option>\r\n                  <option value=\"isOpen\">isOpen</option>\r\n                  <option value=\"isClosed\">isClosed</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <IssuesList issueslist={issueList.filter(issue => {\r\n              if (filter === \"showAll\") return issue;\r\n              if (filter === \"isOpen\" && issue.isOpen === true) return issue;\r\n              if (filter === \"isClosed\" && issue.isOpen === false) return issue;\r\n            }).slice(indexOfFirstIssue, indexOfLastIssue)} />\r\n\r\n            <div className=\"pagination\">\r\n              <ul>\r\n                {pageNumbers.map(number => {\r\n                  return (\r\n                    <li key={number} className={number === currentPage ? \"active\" : \"\"} onClick={handlePageChange}>{number}</li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n      </Router>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderIssues\r\n","import './App.css';\nimport RenderIssues from \"./components/RenderIssues\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RenderIssues />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}